const express = require('express');
const rateLimit = require('express-rate-limit');
const path = require('path');
require('dotenv').config();

const app = express();
app.use(express.json());

// тЬЕ Trust proxy (important for Render hosting)
app.set('trust proxy', 1);

// тЬЕ Check if OpenAI API key is loaded
console.log("ЁЯФС Loaded OPENAI_API_KEY:", process.env.OPENAI_API_KEY ? "тЬЕ Loaded" : "тЭМ Missing");

// тЬЕ Serve static frontend files (e.g., your QR landing page)
app.use(express.static(path.join(__dirname, 'public')));

// тЬЕ Default route
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'qr-landing.html'));
});

// тЬЕ Apply rate limiter
const limiter = rateLimit({
  windowMs: 60 * 60 * 1000, // 1 hour
  max: 20,
  message: 'Too many requests, try again later.'
});
app.use('/api/', limiter);

// тЬЕ API Endpoint: Generate multiple reviews
app.post('/api/generate-multiple-reviews', async (req, res) => {
  const { language = 'English', treatment = 'General Dentistry' } = req.body;
  console.log("ЁЯМР Incoming request for:", language, "Treatment:", treatment);

  try {
    // ЁЯФд Step 1 тАФ Set prompt language
    const promptLanguage =
  language === 'Hindi'
    ? 'in natural, polite Hindi (рд╣рд┐рдВрджреА рдореЗрдВ, рд╕рд░рд▓ рдФрд░ рд╕реНрд╡рд╛рднрд╛рд╡рд┐рдХ рдЕрдВрджрд╛рдЬрд╝ рдореЗрдВ рд▓рд┐рдЦреЗрдВ рдЬреИрд╕реЗ рдорд░реАрдЬ рдЕрд╕рд▓ рдореЗрдВ рдмреЛрд▓рддреЗ рд╣реИрдВ)'
    : language === 'Gujarati'
    ? 'in natural, polite Gujarati (ркЧрлБркЬрк░рк╛ркдрлАркорк╛ркВ, рк╕рк╣ркЬ ркЕркирлЗ рк╕рлНрк╡рк╛ркнрк╛рк╡рк┐ркХ ркнрк╛рк╖рк╛ркорк╛ркВ рк▓ркЦрлЛ ркЬрлЗрко ркжрк░рлНркжрлА рк╕рк╛ркЪрк╛ ркЕркирлБркнрк╡ рк╢рлЗрк░ ркХрк░рлЗ ркЫрлЗ)'
    : 'in English';


    // ЁЯМН Step 2 тАФ Multilingual SEO keyword set
    let seoKeywords = `
    тАЬbest dental clinic in AnandтАЭ, тАЬpainless root canalтАЭ, тАЬtooth-colored fillingтАЭ, тАЬdental implantтАЭ, тАЬsmile designingтАЭ
    `;
// ЁЯТм Step тАФ Add multilingual tone and emotion based on treatment (with emojis)
let toneHint = '';
let emojiHint = '';

const toneMap = {
  English: {
    'Dental Implants': {
      tone: 'Use a confident, happy tone showing restored smile and chewing comfort.',
      emoji: 'ЁЯШД'
    },
    'Root Canal Treatment': {
      tone: 'Use a relieved and grateful tone, mentioning painless experience and comfort.',
      emoji: 'ЁЯШК'
    },
    'Braces and Aligners': {
      tone: 'Use a cheerful, motivated tone about improved smile alignment and self-confidence.',
      emoji: 'ЁЯШБ'
    },
    'Smile Makeover': {
      tone: 'Use an emotional and joyful tone showing pride in new smile and confidence.',
      emoji: 'тЬи'
    },
    'General Dentistry': {
      tone: 'Use a calm, satisfied tone about regular checkups and preventive care.',
      emoji: 'ЁЯШК'
    },
    'Teeth Cleaning': {
      tone: 'Use a fresh, light tone describing clean feeling and hygiene.',
      emoji: 'ЁЯке'
    },
    'Tooth Removal': {
      tone: 'Use a relieved and comfortable tone about painless extraction and recovery.',
      emoji: 'ЁЯШЕ'
    },
    'Wisdom Tooth Surgery': {
      tone: 'Use a brave yet relaxed tone, mentioning expert handling and quick recovery.',
      emoji: 'ЁЯТк'
    }
  },
  Hindi: {
    'Dental Implants': { tone: 'рдПрдХ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕рдкреВрд░реНрдг рдФрд░ рдЦреБрд╢рд╣рд╛рд▓ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ рдЬреЛ рдирдП рдореБрд╕реНрдХрд╛рди рдФрд░ рдЖрд░рд╛рдо рдХреЛ рджрд░реНрд╢рд╛рдПред', emoji: 'ЁЯШД' },
    'Root Canal Treatment': { tone: 'рдПрдХ рд░рд╛рд╣рдд рднрд░рд╛ рдФрд░ рдЖрднрд╛рд░реА рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рдмрд┐рдирд╛ рджрд░реНрдж рдХреЗ рдЕрдиреБрднрд╡ рдФрд░ рдЖрд░рд╛рдо рдХрд╛ рдЙрд▓реНрд▓реЗрдЦ рд╣реЛред', emoji: 'ЁЯШК' },
    'Braces and Aligners': { tone: 'рдПрдХ рдЙрддреНрд╕рд╛рд╣рд┐рдд рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рдмреЗрд╣рддрд░ рдореБрд╕реНрдХрд╛рди рдФрд░ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рдХреА рднрд╛рд╡рдирд╛ рдЭрд▓рдХреЗред', emoji: 'ЁЯШБ' },
    'Smile Makeover': { tone: 'рдПрдХ рднрд╛рд╡рдирд╛рддреНрдордХ рдФрд░ рдЦреБрд╢ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рдирдИ рдореБрд╕реНрдХрд╛рди рдФрд░ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рдХреА рдЦреБрд╢реА рдЭрд▓рдХреЗред', emoji: 'тЬи' },
    'General Dentistry': { tone: 'рдПрдХ рд╢рд╛рдВрдд рдФрд░ рд╕рдВрддреБрд╖реНрдЯ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рдирд┐рдпрдорд┐рдд рдЬрд╛рдВрдЪ рдФрд░ рджреЗрдЦрднрд╛рд▓ рдХрд╛ рдЬрд┐рдХреНрд░ рд╣реЛред', emoji: 'ЁЯШК' },
    'Teeth Cleaning': { tone: 'рдПрдХ рд╣рд▓реНрдХрд╛ рдФрд░ рддрд╛рдЬрд╝рдЧреА рднрд░рд╛ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рд╕рд╛рдлрд╝ рджрд╛рдБрддреЛрдВ рдФрд░ рд╕реНрд╡рдЪреНрдЫрддрд╛ рдХрд╛ рдЙрд▓реНрд▓реЗрдЦ рд╣реЛред', emoji: 'ЁЯке' },
    'Tooth Removal': { tone: 'рдПрдХ рд░рд╛рд╣рдд рднрд░рд╛ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рджрд░реНрдж-рд░рд╣рд┐рдд рдЕрдиреБрднрд╡ рдФрд░ рддреЗрдЬреА рд╕реЗ рд░рд┐рдХрд╡рд░реА рдХрд╛ рдЬрд┐рдХреНрд░ рд╣реЛред', emoji: 'ЁЯШЕ' },
    'Wisdom Tooth Surgery': { tone: 'рдПрдХ рдмрд╣рд╛рджреБрд░ рд▓реЗрдХрд┐рди рд╕рд╣рдЬ рд▓рд╣рдЬрд╛ рд░рдЦреЗрдВ, рдЬрд┐рд╕рдореЗрдВ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рджреЗрдЦрднрд╛рд▓ рдФрд░ рддреЗрдЬрд╝ рд░рд┐рдХрд╡рд░реА рдХрд╛ рдЙрд▓реНрд▓реЗрдЦ рд╣реЛред', emoji: 'ЁЯТк' }
  },
  Gujarati: {
    'Dental Implants': { tone: 'ркПркХ ркЖркдрлНркорк╡рк┐рк╢рлНрк╡рк╛рк╕рккрлВрк░рлНркг ркЕркирлЗ ркЖркиркВркжрк┐ркд рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ ркЬрлЗ ркирк╡рлА рк╕рлНркорк┐ркд ркЕркирлЗ ркЖрк░рк╛рко ркжрк░рлНрк╢рк╛рк╡рлЗ.', emoji: 'ЁЯШД' },
    'Root Canal Treatment': { tone: 'рк░рк╛рк╣ркдркнрк░рлНркпрлЛ ркЕркирлЗ ркЖркнрк╛рк░рлА рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗ рккрлЗркЗркирк▓рлЗрк╕ ркЕркирлБркнрк╡ ркЕркирлЗ ркЖрк░рк╛рко рккрк░ ркнрк╛рк░ ркЖрккрлЗ.', emoji: 'ЁЯШМ' },
    'Braces and Aligners': { tone: 'ркЙркдрлНрк╕рк╛рк╣рккрлВрк░рлНркг рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗркорк╛ркВ рк╕рлБркзрк╛рк░рлЗрк▓рлА рк╕рлНркорк┐ркд ркЕркирлЗ ркЖркдрлНркорк╡рк┐рк╢рлНрк╡рк╛рк╕ркирлА рк▓рк╛ркЧркгрлА ркжрк░рлНрк╢рк╛ркп.', emoji: 'ЁЯШБ' },
    'Smile Makeover': { tone: 'ркнрк╛рк╡ркирк╛ркдрлНркоркХ ркЕркирлЗ ркЦрлБрк╢ рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗ ркирк╡рлА рк╕рлНркорк┐ркд ркЕркирлЗ ркЖркдрлНркорк╡рк┐рк╢рлНрк╡рк╛рк╕ркирлА ркЦрлБрк╢рлА ркжрк░рлНрк╢рк╛рк╡рлЗ.', emoji: 'тЬи' },
    'General Dentistry': { tone: 'рк╢рк╛ркВркд ркЕркирлЗ рк╕ркВркдрлЛрк╖ркХрк╛рк░ркХ рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗркорк╛ркВ ркирк┐ркпркорк┐ркд ркдрккрк╛рк╕ ркЕркирлЗ ркХрк╛рк│ркЬрлАркирлЛ ркЙрк▓рлНрк▓рлЗркЦ рк╣рлЛркп.', emoji: 'ЁЯШК' },
    'Teeth Cleaning': { tone: 'рк╣рк│рк╡рлЛ ркЕркирлЗ ркдрк╛ркЬркЧрлАркнрк░рлНркпрлЛ рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗ рк╕рлНрк╡ркЪрлНркЫркдрк╛ ркЕркирлЗ ркдрк╛ркЬрк╛ ркжрк╛ркВркдркирлА рк▓рк╛ркЧркгрлА ркЖрккрлЗ.', emoji: 'ЁЯке' },
    'Tooth Removal': { tone: 'рк░рк╛рк╣ркдркнрк░рлНркпрлЛ рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗ рккрлЗркЗркирк▓рлЗрк╕ ркПркХрлНрк╕ркЯрлНрк░рлЗркХрлНрк╢рки ркЕркирлЗ ркЭркбрккрлА рк╕рк╛ркЬрк╛ ркерк╡рк╛ркирлА рк╡рк╛ркд ркХрк░рлЗ.', emoji: 'ЁЯШЕ' },
    'Wisdom Tooth Surgery': { tone: 'ркзрлАрк░ркЬрккрлВрк░рлНрк╡ркХркирлЛ рккрк░ркВркдрлБ ркЖрк░рк╛ркоркжрк╛ркпркХ рк╕рлНрк╡рк░ рк░рк╛ркЦрлЛ, ркЬрлЗ ркирк┐рк╖рлНркгрк╛ркд рк╕ркВркнрк╛рк│ ркЕркирлЗ ркЭркбрккрлА рк░рк┐ркХрк╡рк░рлА ркжрк░рлНрк╢рк╛рк╡рлЗ.', emoji: 'ЁЯТк' }
  }
};

// тЬЕ Apply tone + emoji
if (toneMap[language]?.[treatment]) {
  toneHint = toneMap[language][treatment].tone;
  emojiHint = toneMap[language][treatment].emoji;
} else {
  toneHint = 'Use a friendly and natural tone focused on dental care quality.';
  emojiHint = 'ЁЯШК';
}


    if (language === 'Hindi') {
      seoKeywords = `тАЬрдЖрдирдВрдж рдХрд╛ рдмреЗрд╕реНрдЯ рдбреЗрдВрдЯрд▓ рдХреНрд▓рд┐рдирд┐рдХтАЭ, тАЬрдкреЗрдирд▓реЗрд╕ рд░реВрдЯ рдХреИрдирд╛рд▓тАЭ, тАЬрдбреЗрдВрдЯрд▓ рдЗрдореНрдкреНрд▓рд╛рдВрдЯтАЭ, тАЬрд╕реНрдорд╛рдЗрд▓ рдбрд┐рдЬрд╛рдЗрдирд┐рдВрдЧтАЭ`;
    } else if (language === 'Gujarati') {
      seoKeywords = `тАЬркЖркиркВркжркорк╛ркВ рк╢рлНрк░рлЗрк╖рлНрка ркбрлЗркирлНркЯрк▓ ркХрлНрк▓рк┐ркирк┐ркХтАЭ, тАЬрккрлЗркЗркирк▓рлЗрк╕ рк░рлВркЯ ркХрлЗркирк╛рк▓тАЭ, тАЬркбрлЗркирлНркЯрк▓ ркЗркорлНрккрлНрк▓рк╛ркирлНркЯтАЭ, тАЬрк╕рлНркорк╛ркЗрк▓ ркбрк┐ркЭрк╛ркЗркирк┐ркВркЧтАЭ`;
    }

    // ЁЯдЦ Step 3 тАФ Prompt Payload
    const promptPayload = {
      model: 'gpt-4o-mini',
      messages: [
        {
          role: 'system',
          content:
            'You are a friendly and natural-sounding AI that writes 80тАУ100 word patient reviews for Smile Plus Dental Clinic. Each review must sound authentic, polite, and specific. Mention professionalism, hygiene, modern dental care, and patient comfort. Avoid using patient names or fake doctor names. Keep tone conversational and realistic like genuine Google reviews.'
        },
        {
          role: 'user',
          content: `Write five unique, SEO-friendly 80тАУ100 word reviews for Smile Plus Dental Clinic ${promptLanguage}.
Each review should:
- Specifically mention the treatment: "${treatment}" as if the patient personally received it.
- Sound like a real patient sharing a positive experience related to that treatment.
- Naturally include 1тАУ2 of these search-friendly phrases: ${seoKeywords}.
- Highlight friendliness of the staff, hygiene, and modern facilities.
- Mention Dr. Ronak DewaniтАЩs friendly nature, expertise, and professional care during the ${treatment}.
- ${toneHint}- Include one relevant emoji like ${emojiHint} at the end of each review naturally.
Make each review distinct in tone, vocabulary, and structure.
Separate each review with two new lines.`
        }
      ],
      max_tokens: 650,
      temperature: 0.85
    };

    console.log("ЁЯза Sending request to OpenAI...");

    // ЁЯзй Step 4 тАФ Send request to OpenAI
    const openaiResp = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(promptPayload)
    });

    console.log("тЬЕ Response status:", openaiResp.status);
    const responseBody = await openaiResp.json();
    console.log("ЁЯФН OpenAI response body:", JSON.stringify(responseBody, null, 2));

    // ЁЯкД Step 5 тАФ Extract and clean reviews
    const raw = responseBody?.choices?.[0]?.message?.content || '';
    const reviews = raw.split(/\n\n+/).filter(r => r.trim().length > 10);

    console.log(`тЬи Extracted ${reviews.length} reviews`);
    res.json({ reviews });

  } catch (err) {
    console.error("тЭМ Error generating reviews:", err);
    res.status(500).json({ error: 'generate_failed' });
  }
});

// тЬЕ Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`тЬЕ Server running on http://localhost:${PORT}`));
